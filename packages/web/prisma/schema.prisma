generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CodeAnalysis {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  path        String
  content     String
  description String?
  language    String?
  source      String?
  title       String?
  
  // Project relation
  projectId   String?
  project     Project? @relation(fields: [projectId], references: [id])
}

model Conversations {
  id            String          @id
  title         String?
  createdAt     DateTime        @default(now()) @db.Timestamp(6)
  updatedAt     DateTime        @default(now()) @db.Timestamp(6)
  GeneratedCode GeneratedCode[]
  Messages      Messages[]
}

model GeneratedCode {
  id             String        @id
  conversationId String
  messageId      String
  code           String
  language       String
  title          String?
  description    String?
  createdAt      DateTime      @default(now()) @db.Timestamp(6)
  Conversations  Conversations @relation(fields: [conversationId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Messages       Messages      @relation(fields: [messageId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Messages {
  id             String          @id
  conversationId String
  role           String
  content        String
  createdAt      DateTime        @default(now()) @db.Timestamp(6)
  GeneratedCode  GeneratedCode[]
  Conversations  Conversations   @relation(fields: [conversationId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

enum Status {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model Guideline {
  id          Int      @id @default(autoincrement())
  title       String
  description String?  @db.Text
  category    Json
  language    String   @default("general")
  content     String   @db.Text
  version     String?
  lastUpdated DateTime @default(now())
  popularity  Int      @default(0)
  status      Status   @default(DRAFT)
  createdBy   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  // Project relation (optional to support global guidelines)
  projectId   String?
  project     Project? @relation(fields: [projectId], references: [id])
}

// 新增项目模型
model Project {
  id          String        @id @default(cuid())
  name        String
  description String?       @db.Text
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  
  // 平台URL地址
  liveUrl     String?       // 线上地址
  gitUrl      String        // Git地址
  jiraUrl     String?       // Jira地址
  jenkinsUrl  String?       // Jenkins地址
  
  // 可扩展的DevOps信息
  devOpsInfo  Json?
  
  // 关联
  guidelines  Guideline[]
  codeAnalyses CodeAnalysis[]
  
  // 是否为默认项目
  isDefault   Boolean       @default(false)
}
